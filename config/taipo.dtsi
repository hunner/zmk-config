/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 ___ │ │ ___ RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 ___ │ │ ___ RM1 RM2 RM3 RM4 │
  ╰───╮ ___ ___ LB1 LH0 │ │ RH0 RB1 ___ ___ ╭───╯
      ╰─────────────────╯ ╰─────────────────╯
  ╭─────────────────────╮ ╭─────────────────────╮
  │  R   S   N   I  ___ │ │ ___  I   N   S   R  │
  │  A   O   T   E  ___ │ │ ___  E   T   O   A  │
  ╰───╮ ___ ___ SPC BSP │ │ BSP SPC ___ ___ ╭───╯
      ╰─────────────────╯ ╰─────────────────╯
*/

// R is LT4 and RT4
// S is LT3 and RT3
// N is LT2 and RT2
// I is LT1 and RT1

// A is LM4 and RM4
// O is LM3 and RM3
// T is LM2 and RM2
// E is LM1 and RM1

// SPC is LB1 and RB1
// BSPC is LH0 and RH0

#undef COMBO_TERM_FAST
#undef COMBO_TERM_SLOW
#define COMBO_TERM_FAST 50
#define COMBO_TERM_SLOW 80

// COMB(CM1,   S(KC_E) , KC_E, KC_SPC)
ZMK_COMBO_ADV(Lcape , &kp LS(E)    , LM1 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcape , &kp LS(E)    , RM1 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM2,   S(KC_T) , KC_T, KC_SPC)
ZMK_COMBO_ADV(Lcapt , &kp LS(T)    , LM2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapt , &kp LS(T)    , RM2 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM3,   S(KC_O) , KC_O, KC_SPC)
ZMK_COMBO_ADV(Lcapo , &kp LS(O)    , LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapo , &kp LS(O)    , RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM4,   S(KC_A) , KC_A, KC_SPC)
ZMK_COMBO_ADV(Lcapa , &kp LS(A)    , LM4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapa , &kp LS(A)    , RM4 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM5,   KC_LPRN , KC_E, KC_BSPC)
ZMK_COMBO_ADV(Llpar, &kp LPAR      , LM1 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rlpar, &kp LPAR      , RM1 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM6,   KC_LBRC , KC_T, KC_BSPC)
ZMK_COMBO_ADV(Llbkt, &kp LBKT      , LM2 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rlbkt, &kp LBKT      , RM2 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM7,   KC_LCBR , KC_O, KC_BSPC)
ZMK_COMBO_ADV(Llbrc, &kp LBRC      , LM3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rlbrc, &kp LBRC      , RM3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM8,   KC_LT   , KC_A, KC_BSPC)
ZMK_COMBO_ADV(Llt  , &kp LT        , LM4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rlt  , &kp LT        , RM4 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM9,   S(KC_I) , KC_I, KC_SPC)
ZMK_COMBO_ADV(Lcapi , &kp LS(I)    , LT1 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapi , &kp LS(I)    , RT1 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM10,  S(KC_N) , KC_N, KC_SPC)
ZMK_COMBO_ADV(Lcapn , &kp LS(N)    , LT2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapn , &kp LS(N)    , RT2 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM11,  S(KC_S) , KC_S, KC_SPC)
ZMK_COMBO_ADV(Lcaps , &kp LS(S)    , LT3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcaps , &kp LS(S)    , RT3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM12,  S(KC_R) , KC_R, KC_SPC)
ZMK_COMBO_ADV(Lcapr , &kp LS(R)    , LT4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapr , &kp LS(R)    , RT4 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM13,  KC_RPRN , KC_I, KC_BSPC)
ZMK_COMBO_ADV(Lrpar, &kp RPAR      , LT1 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rrpar, &kp RPAR      , RT1 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM14,  KC_RBRC , KC_N, KC_BSPC)
ZMK_COMBO_ADV(Lrbkt, &kp RBKT      , LT2 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rrbkt, &kp RBKT      , RT2 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM15,  KC_RCBR , KC_S, KC_BSPC)
ZMK_COMBO_ADV(Lrbrc, &kp RBRC      , LT3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rrbrc, &kp RBRC      , RT3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM16,  KC_GT   , KC_R, KC_BSPC)
ZMK_COMBO_ADV(Lgt  , &kp GT        , LT4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rgt  , &kp GT        , RT4 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM17,  KC_H    , KC_E, KC_T)
ZMK_COMBO_ADV(Lh   , &kp H         , LM1 LM2, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rh   , &kp H         , RM1 RM2, TAIPO, COMBO_TERM_FAST)
// COMB(CM18,  KC_L    , KC_O, KC_A)
ZMK_COMBO_ADV(Ll   , &kp L         , LM3 LM4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rl   , &kp L         , RM3 RM4, TAIPO, COMBO_TERM_FAST)
// COMB(CM19,  KC_Y    , KC_I, KC_N)
ZMK_COMBO_ADV(Ly   , &kp Y         , LT1 LT2, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Ry   , &kp Y         , RT1 RT2, TAIPO, COMBO_TERM_FAST)
// COMB(CM20,  KC_B    , KC_S, KC_R)
ZMK_COMBO_ADV(Lb   , &kp B         , LT3 LT4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rb   , &kp B         , RT3 RT4, TAIPO, COMBO_TERM_FAST)


// COMB(CM21,  S(KC_H) , KC_E, KC_T, KC_SPC)
ZMK_COMBO_ADV(Lcaph , &kp LS(H)    , LM1 LM2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcaph , &kp LS(H)    , RM1 RM2 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM22,  S(KC_L) , KC_O, KC_A, KC_SPC)
ZMK_COMBO_ADV(Lcapl , &kp LS(L)    , LM3 LM4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapl , &kp LS(L)    , RM3 RM4 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM23,  S(KC_Y) , KC_I, KC_N, KC_SPC)
ZMK_COMBO_ADV(Lcapy , &kp LS(Y)    , LT1 LT2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapy , &kp LS(Y)    , RT1 RT2 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM24,  S(KC_B) , KC_S, KC_R, KC_SPC)
ZMK_COMBO_ADV(Lcapb , &kp LS(B)    , LT3 LT4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapb , &kp LS(B)    , RT3 RT4 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM25,  KC_0    , KC_E, KC_T, KC_BSPC)
ZMK_COMBO_ADV(L0   , &kp N0        , LM1 LM2 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R0   , &kp N0        , RM1 RM2 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM26,  KC_4    , KC_O, KC_A, KC_BSPC)
ZMK_COMBO_ADV(L4   , &kp N4        , LM3 LM4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R4   , &kp N4        , RM3 RM4 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM27,  KC_5    , KC_I, KC_N, KC_BSPC)
ZMK_COMBO_ADV(L5   , &kp N5        , LT1 LT2 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R5   , &kp N5        , RT1 RT2 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM28,  KC_9    , KC_S, KC_R, KC_BSPC)
ZMK_COMBO_ADV(L9   , &kp N9        , LT3 LT4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R9   , &kp N9        , RT3 RT4 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM29,  KC_G    , KC_I, KC_R)
ZMK_COMBO_ADV(Lg   , &kp G         , LT1 LT4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rg   , &kp G         , RT1 RT4, TAIPO, COMBO_TERM_FAST)
// COMB(CM30,  KC_U    , KC_T, KC_O)
ZMK_COMBO_ADV(Lu   , &kp U         , LM2 LM3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Ru   , &kp U         , RM2 RM3, TAIPO, COMBO_TERM_FAST)
// COMB(CM31,  KC_D    , KC_E, KC_A)
ZMK_COMBO_ADV(Ld   , &kp D         , LM1 LM4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rd   , &kp D         , RM1 RM4, TAIPO, COMBO_TERM_FAST)
// COMB(CM32,  KC_P    , KC_N, KC_S)
ZMK_COMBO_ADV(Lp   , &kp P         , LT2 LT3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rp   , &kp P         , RT2 RT3, TAIPO, COMBO_TERM_FAST)


// COMB(CM33,  S(KC_G) , KC_I, KC_R, KC_SPC)
ZMK_COMBO_ADV(Lcapg , &kp LS(G)    , LT1 LT4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapg , &kp LS(G)    , RT1 RT4 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM34,  S(KC_U) , KC_T, KC_O, KC_SPC)
ZMK_COMBO_ADV(Lcapu , &kp LS(U)    , LM2 LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapu , &kp LS(U)    , RM2 RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM35,  S(KC_D) , KC_E, KC_A, KC_SPC)
ZMK_COMBO_ADV(Lcapd , &kp LS(D)    , LM1 LM4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapd , &kp LS(D)    , RM1 RM4 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM36,  S(KC_P) , KC_N, KC_S, KC_SPC)
ZMK_COMBO_ADV(Lcapp , &kp LS(P)    , LT2 LT3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapp , &kp LS(P)    , RT2 RT3 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM37,  KC_AT   , KC_I, KC_R, KC_BSPC)
ZMK_COMBO_ADV(Lat   , &kp AT       , LT1 LT4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rat   , &kp AT       , RT1 RT4 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM38,  KC_2    , KC_T, KC_O, KC_BSPC)
ZMK_COMBO_ADV(L2    , &kp N2       , LM2 LM3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R2    , &kp N2       , RM2 RM3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM39,  KC_HASH , KC_E, KC_A, KC_BSPC)
ZMK_COMBO_ADV(Lhash , &kp HASH     , LM1 LM4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rhash , &kp HASH     , RM1 RM4 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM40,  KC_7    , KC_N, KC_S, KC_BSPC)
ZMK_COMBO_ADV(L7    , &kp N7       , LT2 LT3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R7    , &kp N7       , RT2 RT3 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM41,  KC_C    , KC_E, KC_O)
ZMK_COMBO_ADV(Lc    , &kp C        , LM1 LM3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rc    , &kp C        , RM1 RM3, TAIPO, COMBO_TERM_FAST)
// COMB(CM42,  KC_Q    , KC_T, KC_A)
ZMK_COMBO_ADV(Lq    , &kp Q        , LM2 LM4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rq    , &kp Q        , RM2 RM4, TAIPO, COMBO_TERM_FAST)
// COMB(CM43,  KC_F    , KC_I, KC_S)
ZMK_COMBO_ADV(Lf    , &kp F        , LT1 LT3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rf    , &kp F        , RT1 RT3, TAIPO, COMBO_TERM_FAST)
// COMB(CM44,  KC_Z    , KC_N, KC_R)
ZMK_COMBO_ADV(Lz    , &kp Z        , LT2 LT4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rz    , &kp Z        , RT2 RT4, TAIPO, COMBO_TERM_FAST)


// COMB(CM45,  S(KC_C) , KC_E, KC_O, KC_SPC)
ZMK_COMBO_ADV(Lcapc , &kp LS(C)    , LM1 LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapc , &kp LS(C)    , RM1 RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM46,  S(KC_Q) , KC_T, KC_A, KC_SPC)
ZMK_COMBO_ADV(Lcapq , &kp LS(Q)    , LM1 LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapq , &kp LS(Q)    , RM1 RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM47,  S(KC_F) , KC_I, KC_S, KC_SPC)
ZMK_COMBO_ADV(Lcapf , &kp LS(F)    , LT1 LT3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapf , &kp LS(F)    , RT1 RT3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM48,  S(KC_Z) , KC_N, KC_R, KC_SPC)
ZMK_COMBO_ADV(Lcapz , &kp LS(Z)    , LT2 LT4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapz , &kp LS(Z)    , RT2 RT4 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM49,  KC_1    , KC_E, KC_O, KC_BSPC)
ZMK_COMBO_ADV(L1    , &kp N1       , LM1 LM3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R1    , &kp N1       , RM1 RM3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM50,  KC_3    , KC_T, KC_A, KC_BSPC)
ZMK_COMBO_ADV(L3    , &kp N3       , LM2 LM4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R3    , &kp N3       , RM2 RM4 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM51,  KC_6    , KC_I, KC_S, KC_BSPC)
ZMK_COMBO_ADV(L6    , &kp N6       , LT1 LT3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R6    , &kp N6       , RT1 RT3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM52,  KC_8    , KC_N, KC_R, KC_BSPC)
ZMK_COMBO_ADV(L8    , &kp N8       , LT2 LT4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(R8    , &kp N8       , RT2 RT4 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM53,  KC_V    , KC_S, KC_E)
ZMK_COMBO_ADV(Lv    , &kp V        , LT3 LM1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rv    , &kp V        , RT3 RM1, TAIPO, COMBO_TERM_FAST)
// COMB(CM54,  KC_X    , KC_R, KC_T)
ZMK_COMBO_ADV(Lx    , &kp X        , LT4 LM2, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rx    , &kp X        , RT4 RM2, TAIPO, COMBO_TERM_FAST)
// COMB(CM55,  KC_K    , KC_I, KC_O)
ZMK_COMBO_ADV(Lk    , &kp K        , LT1 LM3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rk    , &kp K        , RT1 RM3, TAIPO, COMBO_TERM_FAST)
// COMB(CM56,  KC_J    , KC_N, KC_A)
ZMK_COMBO_ADV(Lj    , &kp J        , LT2 LM4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rj    , &kp J        , RT2 RM4, TAIPO, COMBO_TERM_FAST)


// COMB(CM57,  S(KC_V) , KC_S, KC_E, KC_SPC)
ZMK_COMBO_ADV(Lcapv , &kp LS(V)    , LT3 LM1 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapv , &kp LS(V)    , RT3 RM1 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM58,  S(KC_X) , KC_R, KC_T, KC_SPC)
ZMK_COMBO_ADV(Lcapx , &kp LS(X)    , LT4 LM2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapx , &kp LS(X)    , RT4 RM2 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM59,  S(KC_K) , KC_I, KC_O, KC_SPC)
ZMK_COMBO_ADV(Lcapk , &kp LS(K)    , LT1 LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapk , &kp LS(K)    , RT1 RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM60,  S(KC_J) , KC_N, KC_A, KC_SPC)
ZMK_COMBO_ADV(Lcapj , &kp LS(J)    , LT2 LM4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapj , &kp LS(J)    , RT2 RM4 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM61,  KC_ASTR , KC_S, KC_E, KC_BSPC)
ZMK_COMBO_ADV(Lstar , &kp STAR     , LT3 LM1 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rstar , &kp STAR     , RT3 RM1 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM62,  KC_CIRC , KC_R, KC_T, KC_BSPC)
ZMK_COMBO_ADV(Lcaret, &kp CARET    , LT4 LM2 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcaret, &kp CARET    , RT4 RM2 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM63,  KC_PLUS , KC_I, KC_O, KC_BSPC)
ZMK_COMBO_ADV(Lplus , &kp PLUS     , LT1 LM3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rplus , &kp PLUS     , RT1 RM3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM64,  KC_EQL  , KC_N, KC_A, KC_BSPC)
ZMK_COMBO_ADV(Lequal, &kp EQUAL    , LT2 LM4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Requal, &kp EQUAL    , RT2 RM4 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM65,  KC_MINS , KC_N, KC_O)
ZMK_COMBO_ADV(Lminus, &kp MINUS    , LT2 LM3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rminus, &kp MINUS    , RT2 RM3, TAIPO, COMBO_TERM_FAST)
// COMB(CM66,  KC_W    , KC_I, KC_A)
ZMK_COMBO_ADV(Lw    , &kp W        , LT1 LM4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rw    , &kp W        , RT1 RM4, TAIPO, COMBO_TERM_FAST)
// COMB(CM67,  KC_M    , KC_R, KC_E)
ZMK_COMBO_ADV(Lm    , &kp M        , LT4 LM1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rm    , &kp M        , RT4 RM1, TAIPO, COMBO_TERM_FAST)
// COMB(CM68,  KC_SLSH , KC_S, KC_T)
ZMK_COMBO_ADV(Lslash, &kp SLASH    , LT3 LM2, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rslash, &kp SLASH    , RT3 RM2, TAIPO, COMBO_TERM_FAST)


// COMB(CM69,  KC_UNDS , KC_N, KC_O, KC_SPC)
ZMK_COMBO_ADV(Lunder, &kp UNDER    , LT2 LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Runder, &kp UNDER    , RT2 RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM70,  S(KC_W) , KC_I, KC_A, KC_SPC)
ZMK_COMBO_ADV(Lcapw , &kp LS(W)    , LT1 LM4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapw , &kp LS(W)    , RT1 RM4 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM71,  S(KC_M) , KC_R, KC_E, KC_SPC)
ZMK_COMBO_ADV(Lcapm , &kp LS(M)    , LT4 LM1 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcapm , &kp LS(M)    , RT4 RM1 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM72,  KC_BSLS , KC_S, KC_T, KC_SPC)
ZMK_COMBO_ADV(Lbslh , &kp BSLH     , LT3 LM2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rbslh , &kp BSLH     , RT3 RM2 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM73,  KC_PERC , KC_N, KC_O, KC_BSPC)
ZMK_COMBO_ADV(Lprcnt, &kp PRCNT    , LT2 LM3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rprcnt, &kp PRCNT    , RT2 RM3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM74,  KC_AMPR , KC_I, KC_A, KC_BSPC)
ZMK_COMBO_ADV(Lamps , &kp AMPS     , LT1 LM4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Ramps , &kp AMPS     , RT1 RM4 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM75,  KC_DLR  , KC_R, KC_E, KC_BSPC)
ZMK_COMBO_ADV(Ldllr , &kp DLLR     , LT4 LM1 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rdllr , &kp DLLR     , RT4 RM1 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM76,  KC_PIPE , KC_S, KC_T, KC_BSPC)
ZMK_COMBO_ADV(Lpipe , &kp PIPE     , LT3 LM2 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rpipe , &kp PIPE     , RT3 RM2 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM77,  KC_QUOT , KC_S, KC_A)
ZMK_COMBO_ADV(Lsqt  , &kp SQT      , LT3 LM4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rsqt  , &kp SQT      , RT3 RM4, TAIPO, COMBO_TERM_FAST)
// COMB(CM78,  KC_SCLN , KC_R, KC_O)
ZMK_COMBO_ADV(Lsemi , &kp SEMI     , LT4 LM3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rsemi , &kp SEMI     , RT4 RM3, TAIPO, COMBO_TERM_FAST)
// COMB(CM79,  KC_QUES , KC_I, KC_T)
ZMK_COMBO_ADV(Lqmark, &kp QMARK    , LT1 LM2, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rqmark, &kp QMARK    , RT1 RM2, TAIPO, COMBO_TERM_FAST)
// COMB(CM80,  KC_COMMA, KC_N, KC_E)
ZMK_COMBO_ADV(Lcomma, &kp COMMA    , LT2 LM1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcomma, &kp COMMA    , RT2 RM1, TAIPO, COMBO_TERM_FAST)


// COMB(CM81,  KC_DQT  , KC_S, KC_A, KC_SPC)
ZMK_COMBO_ADV(Ldqt  , &kp DQT      , LT3 LM4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rdqt  , &kp DQT      , RT3 RM4 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM82,  KC_COLN , KC_R, KC_O, KC_SPC)
ZMK_COMBO_ADV(Lcolon, &kp COLON    , LT4 LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rcolon, &kp COLON    , RT4 RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM83,  KC_EXLM , KC_I, KC_T, KC_SPC)
ZMK_COMBO_ADV(Lexcl , &kp EXCL     , LT1 LM2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rexcl , &kp EXCL     , RT1 RM2 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM84,  KC_DOT  , KC_N, KC_E, KC_SPC)
ZMK_COMBO_ADV(Ldot  , &kp DOT      , LT2 LM1 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rdot  , &kp DOT      , RT2 RM1 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM85,  KC_GRAVE, KC_S, KC_A, KC_BSPC)
ZMK_COMBO_ADV(Lgrave, &kp GRAVE    , LM4 LT3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rgrave, &kp GRAVE    , RM4 RT3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM86,  KC_TILDE, KC_N, KC_E, KC_BSPC)
ZMK_COMBO_ADV(Ltilde, &kp TILDE    , LT2 LM1 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rtilde, &kp TILDE    , RT2 RM1 RH0, TAIPO, COMBO_TERM_FAST)


// COMB(CM87,  KC_ENTER, KC_E, KC_T, KC_O)
ZMK_COMBO_ADV(Lenter, &kp ENTER    , LM1 LM2 LM3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Renter, &kp ENTER    , RM1 RM2 RM3, TAIPO, COMBO_TERM_FAST)
// COMB(CM88,  KC_TAB  , KC_I, KC_N, KC_S)
ZMK_COMBO_ADV(Ltab  , &kp TAB      , LT1 LT2 LT3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rtab  , &kp TAB      , RT1 RT2 RT3, TAIPO, COMBO_TERM_FAST)


// COMB(CM89,  KC_ESC  , KC_E, KC_T, KC_O, KC_SPC)
ZMK_COMBO_ADV(Lesc  , &kp ESC      , LM1 LM2 LM3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Resc  , &kp ESC      , RM1 RM2 RM3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM90,  KC_DEL  , KC_I, KC_N, KC_S, KC_SPC)
ZMK_COMBO_ADV(Ldel  , &kp DEL      , LT1 LT2 LT3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rdel  , &kp DEL      , RT1 RT2 RT3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM91,  KC_ALGR , KC_E, KC_T, KC_O, KC_BSPC)
ZMK_COMBO_ADV(Lralt , &kp RALT     , LM1 LM2 LM3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rralt , &kp RALT     , RM1 RM2 RM3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM92,  KC_LEAD , KC_I, KC_N, KC_S, KC_BSPC)
//ZMK_COMBO_ADV(Llead , &kp LEAD     , LT1 LT3 LT2 LH0, TAIPO, COMBO_TERM_FAST)
//ZMK_COMBO_ADV(Rlead , &kp LEAD     , RT1 RT3 RT2 RH0, TAIPO, COMBO_TERM_FAST)


// These need to be sticky, but clear with repeat presses
// COMB(CM93,  MY_LGUI , KC_A, KC_R)
ZMK_COMBO_ADV(Lgui  , &sk LGUI     , LM4 LT4, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rgui  , &sk LGUI     , RM4 RT4, TAIPO, COMBO_TERM_FAST)
// COMB(CM94,  MY_LALT , KC_O, KC_S)
ZMK_COMBO_ADV(Lalt  , &sk LALT     , LM3 LT3, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Ralt  , &sk LALT     , RM3 RT3, TAIPO, COMBO_TERM_FAST)
// COMB(CM95,  MY_LCTL , KC_T, KC_N)
ZMK_COMBO_ADV(Lctl  , &sk LCTL     , LM2 LT2, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rctl  , &sk LCTL     , RM2 RT2, TAIPO, COMBO_TERM_FAST)
// COMB(CM96,  MY_LSFT , KC_E, KC_I)
ZMK_COMBO_ADV(Lsft  , &sk LSHFT    , LM1 LT1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rsft  , &sk LSHFT    , RM1 RT1, TAIPO, COMBO_TERM_FAST)


// COMB(CM97,  KC_RIGHT, KC_A, KC_R, KC_SPC)
ZMK_COMBO_ADV(Lright, &kp RIGHT    , LM4 LT4 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rright, &kp RIGHT    , RM4 RT4 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM98,  KC_UP   , KC_O, KC_S, KC_SPC)
ZMK_COMBO_ADV(Lup   , &kp UP       , LM3 LT3 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rup   , &kp UP       , RM3 RT3 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM99,  KC_DOWN , KC_T, KC_N, KC_SPC)
ZMK_COMBO_ADV(Ldown , &kp DOWN     , LM2 LT2 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rdown , &kp DOWN     , RM2 RT2 RB1, TAIPO, COMBO_TERM_FAST)
// COMB(CM100, KC_LEFT , KC_E, KC_I, KC_SPC)
ZMK_COMBO_ADV(Lleft , &kp LEFT     , LM1 LT1 LB1, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rleft , &kp LEFT     , RM1 RT1 RB1, TAIPO, COMBO_TERM_FAST)


// COMB(CM101, KC_PGUP , KC_A, KC_R, KC_BSPC)
ZMK_COMBO_ADV(Lpgup , &kp PG_UP    , LM4 LT4 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rpgup , &kp PG_UP    , RM4 RT4 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM102, KC_HOME , KC_O, KC_S, KC_BSPC)
ZMK_COMBO_ADV(Lhome , &kp HOME     , LM3 LT3 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rhome , &kp HOME     , RM3 RT3 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM103, KC_END  , KC_T, KC_N, KC_BSPC)
ZMK_COMBO_ADV(Lend  , &kp END      , LM2 LT2 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rend  , &kp END      , RM2 RT2 RH0, TAIPO, COMBO_TERM_FAST)
// COMB(CM104, KC_PGDN , KC_E, KC_I, KC_BSPC)
ZMK_COMBO_ADV(Lpgdn , &kp PG_DN    , LM1 LT1 LH0, TAIPO, COMBO_TERM_FAST)
ZMK_COMBO_ADV(Rpgdn , &kp PG_DN    , RM1 RT1 RH0, TAIPO, COMBO_TERM_FAST)


// Missing sequences after leader key for F-keys.
// Maybe I can add https://github.com/zmkfirmware/zmk/pull/1380 to my tree
